server {
    listen 1026;
    server_name localhost;
    
    # Block all request bodies globally
    client_max_body_size 0;
    client_body_buffer_size 1k;
    
    # Dynamic port proxying - match any port number
    location ~ ^/(\d+)(/.*)$ {
        set $port $1;
        set $path $2$is_args$args;  # Include query parameters
        
        # Only allow GET requests
        limit_except GET {
            deny all;
        }
        
        # Check if request contains a body
        if ($http_content_length) {
            return 403 "Request bodies are not allowed";
        }
        if ($http_transfer_encoding) {
            return 403 "Request bodies are not allowed";
        }
        
        # Pass to the appropriate localhost port
        proxy_pass http://127.0.0.1:$port$path;
        
        # Preserve the original Content-Type headers
        proxy_hide_header Content-Type;
        proxy_pass_header Content-Type;
        
        # More complete proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable proxy buffering which can alter content
        proxy_buffering off;
        
        # WebSocket support for live reload
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
    }
    
    # Default error page
    error_page 403 404 500 502 503 504 /error.html;
    location = /error.html {
        root /usr/share/nginx/html;
        internal;
    }
}